package tcpros

import (
	"bytes"
	"reflect"
	"testing"

	"github.com/stretchr/testify/require"
)

var casesHeader = []struct {
	name   string
	header interface{}
	byts   []byte
}{
	{
		"subscriber",
		&HeaderSubscriber{
			Callerid:          "/rostopic_1_1585920221893",
			Md5sum:            "6a62c6daae103f4ff57a132d6f95cec2",
			Topic:             "/test_pub",
			Type:              "sensor_msgs/Imu",
			MessageDefinition: "test definition",
		},
		[]byte("\xb3\x00\x00\x00\x22\x00\x00\x00\x63\x61\x6c\x6c\x65\x72\x69\x64" +
			"\x3d\x2f\x72\x6f\x73\x74\x6f\x70\x69\x63\x5f\x31\x5f\x31\x35\x38" +
			"\x35\x39\x32\x30\x32\x32\x31\x38\x39\x33\x27\x00\x00\x00\x6d\x64" +
			"\x35\x73\x75\x6d\x3d\x36\x61\x36\x32\x63\x36\x64\x61\x61\x65\x31" +
			"\x30\x33\x66\x34\x66\x66\x35\x37\x61\x31\x33\x32\x64\x36\x66\x39" +
			"\x35\x63\x65\x63\x32\x0f\x00\x00\x00\x74\x6f\x70\x69\x63\x3d\x2f" +
			"\x74\x65\x73\x74\x5f\x70\x75\x62\x14\x00\x00\x00\x74\x79\x70\x65" +
			"\x3d\x73\x65\x6e\x73\x6f\x72\x5f\x6d\x73\x67\x73\x2f\x49\x6d\x75" +
			"\x0d\x00\x00\x00\x74\x63\x70\x5f\x6e\x6f\x64\x65\x6c\x61\x79\x3d" +
			"\x30\x22\x00\x00\x00\x6d\x65\x73\x73\x61\x67\x65\x5f\x64\x65\x66" +
			"\x69\x6e\x69\x74\x69\x6f\x6e\x3d\x74\x65\x73\x74\x20\x64\x65\x66" +
			"\x69\x6e\x69\x74\x69\x6f\x6e"),
	},
}

func TestHeaderDecode(t *testing.T) {
	for _, c := range casesHeader {
		t.Run(c.name, func(t *testing.T) {
			header := reflect.New(reflect.TypeOf(c.header).Elem()).Interface()
			raw, err := headerDecodeRaw(bytes.NewBuffer(c.byts))
			require.NoError(t, err)
			err = headerDecode(raw, header)
			require.NoError(t, err)
			require.Equal(t, c.header, header)
		})
	}
}
