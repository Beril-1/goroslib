// Package geometry_msgs contains message definitions (autogenerated).
package geometry_msgs

import (
	"github.com/aler9/goroslib/msg"
	"github.com/aler9/goroslib/msgs/std_msgs"
)

type Accel struct {
	msg.Package `ros:"geometry_msgs"`
	Linear      Vector3
	Angular     Vector3
}

type AccelStamped struct {
	msg.Package `ros:"geometry_msgs"`
	Header      std_msgs.Header
	Accel       Accel
}

type AccelWithCovariance struct {
	msg.Package `ros:"geometry_msgs"`
	Accel       Accel
	Covariance  [36]float64
}

type AccelWithCovarianceStamped struct {
	msg.Package `ros:"geometry_msgs"`
	Header      std_msgs.Header
	Accel       AccelWithCovariance
}

type Inertia struct {
	msg.Package `ros:"geometry_msgs"`
	M           float64
	Com         Vector3
	Ixx         float64
	Ixy         float64
	Ixz         float64
	Iyy         float64
	Iyz         float64
	Izz         float64
}

type InertiaStamped struct {
	msg.Package `ros:"geometry_msgs"`
	Header      std_msgs.Header
	Inertia     Inertia
}

type Point struct {
	msg.Package `ros:"geometry_msgs"`
	X           float64
	Y           float64
	Z           float64
}

type Point32 struct {
	msg.Package `ros:"geometry_msgs"`
	X           float32
	Y           float32
	Z           float32
}

type PointStamped struct {
	msg.Package `ros:"geometry_msgs"`
	Header      std_msgs.Header
	Point       Point
}

type Polygon struct {
	msg.Package `ros:"geometry_msgs"`
	Points      []Point32
}

type PolygonStamped struct {
	msg.Package `ros:"geometry_msgs"`
	Header      std_msgs.Header
	Polygon     Polygon
}

type Pose struct {
	msg.Package `ros:"geometry_msgs"`
	Position    Point
	Orientation Quaternion
}

type Pose2D struct {
	msg.Package `ros:"geometry_msgs"`
	X           float64
	Y           float64
	Theta       float64
}

type PoseArray struct {
	msg.Package `ros:"geometry_msgs"`
	Header      std_msgs.Header
	Poses       []Pose
}

type PoseStamped struct {
	msg.Package `ros:"geometry_msgs"`
	Header      std_msgs.Header
	Pose        Pose
}

type PoseWithCovariance struct {
	msg.Package `ros:"geometry_msgs"`
	Pose        Pose
	Covariance  [36]float64
}

type PoseWithCovarianceStamped struct {
	msg.Package `ros:"geometry_msgs"`
	Header      std_msgs.Header
	Pose        PoseWithCovariance
}

type Quaternion struct {
	msg.Package `ros:"geometry_msgs"`
	X           float64
	Y           float64
	Z           float64
	W           float64
}

type QuaternionStamped struct {
	msg.Package `ros:"geometry_msgs"`
	Header      std_msgs.Header
	Quaternion  Quaternion
}

type Transform struct {
	msg.Package `ros:"geometry_msgs"`
	Translation Vector3
	Rotation    Quaternion
}

type TransformStamped struct {
	msg.Package  `ros:"geometry_msgs"`
	Header       std_msgs.Header
	ChildFrameId string
	Transform    Transform
}

type Twist struct {
	msg.Package `ros:"geometry_msgs"`
	Linear      Vector3
	Angular     Vector3
}

type TwistStamped struct {
	msg.Package `ros:"geometry_msgs"`
	Header      std_msgs.Header
	Twist       Twist
}

type TwistWithCovariance struct {
	msg.Package `ros:"geometry_msgs"`
	Twist       Twist
	Covariance  [36]float64
}

type TwistWithCovarianceStamped struct {
	msg.Package `ros:"geometry_msgs"`
	Header      std_msgs.Header
	Twist       TwistWithCovariance
}

type Vector3 struct {
	msg.Package `ros:"geometry_msgs"`
	X           float64
	Y           float64
	Z           float64
}

type Vector3Stamped struct {
	msg.Package `ros:"geometry_msgs"`
	Header      std_msgs.Header
	Vector      Vector3
}

type Wrench struct {
	msg.Package `ros:"geometry_msgs"`
	Force       Vector3
	Torque      Vector3
}

type WrenchStamped struct {
	msg.Package `ros:"geometry_msgs"`
	Header      std_msgs.Header
	Wrench      Wrench
}
